---
#- name: Prepare ssh key
#  hosts: localhost
#  connection: local
#  gather_facts: false
#  tasks:
#
#  - name: Create temporary directory to store ssh key
#    ansible.builtin.tempfile:
#      state: directory
#    register: ssh_tmp
#    delegate_to: localhost
#
#  - debug:
#      var: ssh_tmp.path
#    delegate_to: localhost
#
#  - name: Generate an OpenSSH keypair with the default values (4096 bits, rsa)
#    community.crypto.openssh_keypair:
#      path: "{{ ssh_tmp.path }}/id_rsa"
#    delegate_to: localhost

- name: Verify docker container
  hosts: epic-backup
  gather_facts: false
  tasks:

  - name: Wait for docker api to get available
    wait_for:
      port: 2375
      host: "{{ hostvars[docker_host].ansible_host }}"
      # search_regex: Connected
    vars:
      ansible_connection: local
    delegate_to: localhost
    when: docker_host != 'localhost'


  - name: Get infos on container
    docker_container_info:
      name: "{{ inventory_hostname }}"
      docker_host: "{{ docker_api }}"
    register: result
    delegate_to: localhost

  - name: Assert container is running
    assert:
      that:
      - result.exists
      - result.container['State']['Status'] == "running"

  - name: get infos about running services
    ansible.builtin.service:
      name: "{{ item }}"
      state: started
    check_mode: true
    register: services
    loop:
      - ssh
      - tor

  - name: Assert expected services running
    ansible.builtin.assert:
      that: item.changed == false
    loop: "{{ services.results }}"
  
- name: Verify epicraspberries
  hosts: epicraspberries
  gather_facts: false
  tasks:

  - name: create ssh config dir
    ansible.builtin.file:
      path: /home/pi/.ssh
      owner: pi
      group: pi
      state: directory

  - name: Generate an OpenSSH keypair with the default values (4096 bits, rsa)
    community.crypto.openssh_keypair:
      path: /home/pi/.ssh/id_rsa
    
  - name: install pexpect module #needed on target machine for next ansible.builtin.expect to work
    ansible.builtin.apt:
      name: python-pexpect
      state: present
      
  - name: test ssh connection via onion hidden service
    ansible.builtin.expect:
      command: "ssh -oStrictHostKeyChecking=no -o ConnectTimeout=10 -q {{ hostname }}@{{ net_sync_hostname}} -p 2222 exit"
      responses:
        (.*)password:(.*): "{{ users_password }}"
    changed_when: false
    register: result
    retries: 5
    delay: 10
    until: result is not failed
    become: true
    become_user: pi

  - name: create file to test backup
    ansible.builtin.copy:
      content: '# file to test backup capability'
      dest: /home/pi/testfile
      owner: pi
      group: pi

  - name: create destination backup dir
    ansible.builtin.file:
      path: "/home/{{ hostname }}/backups/"
      owner: "{{ hostname }}"
      group: testcommon
      state: directory
    delegate_to: epic-backup
    
  - name: test rsync via ssh onion hidden service
    ansible.builtin.expect:
      command: backup_home2
      responses:
        (.*)password:(.*): "{{ users_password }}"
    register: rsync
    changed_when: rsync.stdout != ""
    become: true
    become_user: pi

  - name: Get stats about backup destination testfile
    stat:
      path: "/home/{{ hostname }}/testfile"
    changed_when: false
    register: result
    delegate_to: epic-backup

  - name: Assert testfile was written to backup destination
    assert:
      that:
      - result.stat.exists
